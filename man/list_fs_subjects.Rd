% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_subjects.R
\name{list_fs_subjects}
\alias{list_fs_subjects}
\title{list_fs_subjects}
\usage{
list_fs_subjects(
  SUBJECTS_DIR = get_SUBJECTS_DIR(),
  type = c("all", "cross", "long", "template"),
  detailed = FALSE,
  include_longtemplates = "auto"
)
}
\arguments{
\item{SUBJECTS_DIR}{The directory to search. If \code{NULL}, function will attempt
to read the environment variable \verb{$\{SUBJECTS_DIR\}}.}

\item{type}{What types of subject directories to return:\tabular{ll}{
   type \tab details \cr
   cross \tab cross-sectional subjects \cr
   long \tab longitudinal subjects \cr
   template \tab mid-space templates from longitudinal runs \cr
   all \tab all the above \cr
}}

\item{detailed}{Logical. If \code{TRUE} return a data.frame with participant
id, directory path, and subject type information.}

\item{include_longtemplates}{The default behaviour (\code{"auto"}) is that
templates are included for \code{type = "all"} but not for \code{type = "cross"}
or \code{type = "long"}. This can be overridden by setting to \code{TRUE} or
\code{FALSE} to always include templates (if present), or never include them.}
}
\value{
a vector of Freesurfer IDs found within \code{SUBJECTS_DIR} of the
appropriate \code{type}. If \code{detailed = TRUE} then the return value is a
\code{data.frame} instead.
}
\description{
Given the path to a Freesurfer formatted subjects directory return a list of
the valid subject directories found within.
}
